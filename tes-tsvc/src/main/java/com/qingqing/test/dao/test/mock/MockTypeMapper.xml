<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qingqing.test.dao.test.mock.MockTypeMapper" >
  <resultMap id="BaseResultMap" type="com.qingqing.test.domain.mock.MockType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mock_type" property="mockType" jdbcType="VARCHAR" />
    <result column="mock_name" property="mockName" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BOOLEAN" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>

    <sql id="Base_Column_List" >
    id, mock_type, mock_name, is_deleted, create_time, last_update_time
  </sql>

  <insert id="insert" parameterType="com.qingqing.test.domain.mock.MockType" useGeneratedKeys="true" keyProperty="id">
    insert into t_mock_type(mock_type, mock_name, is_deleted, create_time)
    values(
    #{mockType, jdbcType=VARCHAR},
    #{mockName, jdbcType=VARCHAR},
    0,
    now()
    )
    ON DUPLICATE KEY UPDATE
      	is_deleted = 0,
      	mock_name = #{mockName, jdbcType=VARCHAR},
      	create_time = now()
  </insert>

  <select id="selectAll" resultMap="BaseResultMap">
    select
  	  <include refid="Base_Column_List" />
    	from t_mock_type
        order by id desc
  </select>

  <select id="findById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_mock_type
    where id = #{id, jdbcType=BIGINT}
  </select>

  <select id="findByMockType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_mock_type
    where mock_type = #{mockType, jdbcType=VARCHAR}
  </select>

  <update id="delete">
    update t_mock_type set is_deleted= 1 where id = #{id, jdbcType=BIGINT}
  </update>

  <update id="update" parameterType="com.qingqing.test.domain.mock.MockType">
    update t_mock_type
    set mock_type = #{mockType, jdbcType=VARCHAR},
    mock_name = #{mockName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>