server.port=8090
weixinpay.app.appid=wxca0620994ef957ad

database.test_backup.url = jdbc:mysql://172.22.12.13:3306/qq_iTest?characterEncoding=UTF-8
database.test_backup.username=qingqingDev
database.test_backup.password=qingqing@dev

#database.test_backup.url = jdbc:mysql://172.22.7.82:3306/qq_iTest?characterEncoding=UTF-8
#database.test_backup.username=root
#database.test_backup.password=123

database.test.url = jdbc:mysql://172.22.12.13:3306/qq_iTest?characterEncoding=UTF-8
database.test.username=qingqingDev
database.test.password=qingqing@dev


mybatis.config.path=classpath:mybatis-config.xml

shadowkey.tripledes=1e/WkYyJNHkx4/HWDchRQ+AmE+qKONY+

ftp.host=172.20.13.178
ftp.port=21
ftp.username=qingqingDev
ftp.password=qingqing@Dev
ftp.userid.filepath=/1w_hash.txt
ftp.orderid.filepath=/100w_hash.txt
ftp.rsa.privatekey.filepath=/privateKey
ftp.rsa.publickey.filepath=/publicKey

#设定静态文件路径，js,css等
spring.mvc.static-path-pattern=/static/**

#spring.freemarker.allow-request-override=false
#spring.freemarker.cache=true
#spring.freemarker.check-template-location=true
#spring.freemarker.charset=UTF-8
#spring.freemarker.content-type=text/html
#spring.freemarker.expose-request-attributes=false
#spring.freemarker.expose-session-attributes=false
#spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
spring.freemarker.request-context-attribute=request
#spring.freemarker.settings.*=
#spring.freemarker.suffix=.ftl
#spring.freemarker.template-loader-path=classpath:/templates/ #comma-separated list
#spring.freemarker.view-names= # whitelist of view names that can be resolved

hystrix.command.default.circuitBreaker.enabled=true
#统计的时间
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=300000
#每个统计时间内的统计请求数,比如说10秒内的10个请求
hystrix.command.default.circuitBreaker.requestVolumeThreshold=10
#错误比率阀值，如果错误率>=该值，circuit会被打开，并短路所有请求触发fallback。默认50。比如：10秒内10个请求中30%的请求出错了，则短路
hystrix.command.default.circuitBreaker.errorThresholdPercentage=30
#短路之后，多久之后尝试切回。默认5000。比如：10秒后尝试切回，分一次请求走原逻辑，如果成功，切回原流程，如果失败，再等10秒尝试
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000

#统计的时间
hystrix.command.not_default.metrics.rollingStats.timeInMilliseconds=300000
#每个统计时间内的统计请求数,比如说10秒内的10个请求
hystrix.command.not_default.circuitBreaker.requestVolumeThreshold=10
#错误比率阀值，如果错误率>=该值，circuit会被打开，并短路所有请求触发fallback。默认50。比如：10秒内10个请求中30%的请求出错了，则短路
hystrix.command.not_default.circuitBreaker.errorThresholdPercentage=30
#短路之后，多久之后尝试切回。默认5000。比如：10秒后尝试切回，分一次请求走原逻辑，如果成功，切回原流程，如果失败，再等10秒尝试
hystrix.command.not_default.circuitBreaker.sleepWindowInMilliseconds=10000


database.passport.url = jdbc:mysql://passport-perf.mysql.idc.cedu.cn:3314/qq_passport?characterEncoding=UTF-8
database.passport.username=perf_passport
database.passport.password=5a45c3f7d9d1

database.user.url = jdbc:mysql://svc-perf.mysql.idc.cedu.cn:3306/qq_user?characterEncoding=UTF-8
database.user.username=perf_svc
database.user.password=b489223f4b57

a.b=2
c.d=2

multipart.maxRequestSize=50Mb

socks.proxy.domain = 172.20.12.8
socks.proxy.port = 1081


elasticsearch.url=result:elasticsearch://api-1.es.idc.cedu.cn:9300/elasticsearch

database.mock.url=jdbc:mysql://172.22.12.13:3306/qq_mock_test?useUnicode=true&characterEncoding=UTF-8
database.mock.username=qingqingDev
database.mock.password=qingqing@dev

rabbitmq.pfm.url=172.20.13.191:5672
rabbitmq.pfm.username=guest
rabbitmq.pfm.password=guest
rabbitmq.pfm.async.vhost=api_app_test_pfm
rabbitmq.pfm.async.exchange=api.async.event.rabbitmq.exchange.pfm
rabbitmq.pfm.async.queue=api_test.async.event.rabbitmq.queue.pfm

protobuf.init.filepath=/full-proto.sql


# Redis数据库索引（默认为0）
spring.redis.database=0 
# Redis服务器地址
spring.redis.host=container.hfjy.red
# Redis服务器连接端口
spring.redis.port=20001
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8 
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1 
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8 
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0 
# 连接超时时间（毫秒）
spring.redis.timeout=300
